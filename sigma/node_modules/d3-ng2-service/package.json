{
  "_args": [
    [
      {
        "raw": "d3-ng2-service@^1.10.1",
        "scope": null,
        "escapedName": "d3-ng2-service",
        "name": "d3-ng2-service",
        "rawSpec": "^1.10.1",
        "spec": ">=1.10.1 <2.0.0",
        "type": "range"
      },
      "/Users/Axel/Dropbox/Sigma_Front-End/sigmafrontend/sigma"
    ]
  ],
  "_from": "d3-ng2-service@>=1.10.1 <2.0.0",
  "_id": "d3-ng2-service@1.10.1",
  "_inCache": true,
  "_location": "/d3-ng2-service",
  "_nodeVersion": "6.9.5",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/d3-ng2-service-1.10.1.tgz_1493230376284_0.10260701877996325"
  },
  "_npmUser": {
    "name": "tomwanzek",
    "email": "tomwanzek.dev@gmail.com"
  },
  "_npmVersion": "3.10.10",
  "_phantomChildren": {},
  "_requested": {
    "raw": "d3-ng2-service@^1.10.1",
    "scope": null,
    "escapedName": "d3-ng2-service",
    "name": "d3-ng2-service",
    "rawSpec": "^1.10.1",
    "spec": ">=1.10.1 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/d3-ng2-service/-/d3-ng2-service-1.10.1.tgz",
  "_shasum": "f8230356da0c1eac8d54f48f7ff0fb290407a0dd",
  "_shrinkwrap": null,
  "_spec": "d3-ng2-service@^1.10.1",
  "_where": "/Users/Axel/Dropbox/Sigma_Front-End/sigmafrontend/sigma",
  "author": {
    "name": "Thomas Wanzek",
    "url": "https://github.com/tomwanzek"
  },
  "bugs": {
    "url": "https://github.com/tomwanzek/d3-ng2-service/issues"
  },
  "dependencies": {
    "@types/d3-array": "1.2",
    "@types/d3-axis": "1.0",
    "@types/d3-brush": "1.0",
    "@types/d3-chord": "1.0",
    "@types/d3-collection": "1.0",
    "@types/d3-color": "1.0",
    "@types/d3-dispatch": "1.0",
    "@types/d3-drag": "1.0",
    "@types/d3-dsv": "1.0",
    "@types/d3-ease": "1.0",
    "@types/d3-force": "1.0",
    "@types/d3-format": "1.2",
    "@types/d3-geo": "1.6",
    "@types/d3-hierarchy": "1.1",
    "@types/d3-interpolate": "1.1",
    "@types/d3-path": "1.0",
    "@types/d3-polygon": "1.0",
    "@types/d3-quadtree": "1.0",
    "@types/d3-queue": "3.0",
    "@types/d3-random": "1.0",
    "@types/d3-scale": "1.0",
    "@types/d3-selection": "1.0",
    "@types/d3-selection-multi": "1.0",
    "@types/d3-shape": "1.0",
    "@types/d3-time": "1.0",
    "@types/d3-time-format": "2.0",
    "@types/d3-timer": "1.0",
    "@types/d3-transition": "1.0",
    "@types/d3-voronoi": "1.1",
    "@types/d3-zoom": "1.1",
    "d3-array": "1.2",
    "d3-axis": "1.0",
    "d3-brush": "1.0",
    "d3-chord": "1.0",
    "d3-collection": "1.0",
    "d3-color": "1.0",
    "d3-dispatch": "1.0",
    "d3-drag": "1.0",
    "d3-dsv": "1.0",
    "d3-ease": "1.0",
    "d3-force": "1.0",
    "d3-format": "1.2",
    "d3-geo": "1.6",
    "d3-hierarchy": "1.1",
    "d3-interpolate": "1.1",
    "d3-path": "1.0",
    "d3-polygon": "1.0",
    "d3-quadtree": "1.0",
    "d3-queue": "3.0",
    "d3-random": "1.0",
    "d3-scale": "1.0",
    "d3-selection": "1.0",
    "d3-selection-multi": "1.0",
    "d3-shape": "1.0",
    "d3-time": "1.0",
    "d3-time-format": "2.0",
    "d3-timer": "1.0",
    "d3-transition": "1.0",
    "d3-voronoi": "1.1",
    "d3-zoom": "1.1"
  },
  "description": "A D3 version 4 service for use with Angular 2+.",
  "devDependencies": {
    "@angular/compiler": "4.0.1",
    "@angular/core": "4.0.1",
    "codelyzer": "2.0.0",
    "rxjs": "5.1.0",
    "tslint": "4.5.0",
    "typescript": "2.2.2",
    "zone.js": "0.8.4"
  },
  "directories": {},
  "dist": {
    "shasum": "f8230356da0c1eac8d54f48f7ff0fb290407a0dd",
    "tarball": "https://registry.npmjs.org/d3-ng2-service/-/d3-ng2-service-1.10.1.tgz"
  },
  "es2015": "esm/index.js",
  "gitHead": "e5ec2f8e6cb9cb0ad533f417dd3c0f5ba753656d",
  "homepage": "https://github.com/tomwanzek/d3-ng2-service#readme",
  "jsnext:main": "index.js",
  "keywords": [
    "d3",
    "d3 4.x",
    "angular",
    "angular 2",
    "ng",
    "ng2",
    "service",
    "d3-array",
    "d3-axis",
    "d3-brush",
    "d3-chord",
    "d3-collection",
    "d3-color",
    "d3-dispatch",
    "d3-drag",
    "d3-dsv",
    "d3-ease",
    "d3-force",
    "d3-format",
    "d3-geo",
    "d3-hierarchy",
    "d3-interpolate",
    "d3-path",
    "d3-polygon",
    "d3-quadtree",
    "d3-queue",
    "d3-random",
    "d3-scale",
    "d3-selection",
    "d3-selection-multi",
    "d3-shape",
    "d3-time",
    "d3-time-format",
    "d3-timer",
    "d3-transition",
    "d3-voronoi",
    "d3-zoom"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "tomwanzek",
      "email": "tomwanzek.dev@gmail.com"
    }
  ],
  "module": "index.js",
  "name": "d3-ng2-service",
  "optionalDependencies": {},
  "peerDependencies": {
    "@angular/core": "^4.0 || ^2.0 || 2.0.0-rc.5 || 2.0.0-rc.6 || 2.0.0-rc.7"
  },
  "readme": "# D3 Service for Angular 2\n\n[![Build Status](https://travis-ci.org/tomwanzek/d3-ng2-service.svg?branch=master)](https://travis-ci.org/tomwanzek/d3-ng2-service)\n\n## Content\n\n* [Introduction](#introduction)\n* [Scope of D3 Functionality](#scope-of-d3-functionality)\n* [Intended Use](#intended-use)\n* [Installation](#installation)\n* [Usage](#usage)\n* [Demo Project](#demo-project)\n\n## Introduction\n\n[**D3**](https://github.com/d3/d3), [Mike Bostock](https://github.com/mbostock)â€™s famed data visualization tool, has recently undergone a major overhaul. Similarly, [**Angular 2**](https://github.com/angular/angular) is a material departure from its predecessor.\n\nThe newly released **D3 version 4** has been completely modularized and seen enhancements, which make it all the more powerful, yet easy to use.\n\nAmongst the many changes coming with **Angular 2**, the native support for developing at scale in TypeScript and the overhauled componentized structure are but two.\n\nCombining the power of **D3 version 4** and **Angular 2** can be challenging at first. The intent of this package is to provide a simple way to access **D3** as an **Angular 2 service** for use by components requiring the kind of sophisticated visualization support D3 excels at.\nThe package includes TypeScript 2 definitions to improve development experience and code maintainability.\n\n## Scope of D3 Functionality\n\nAs this package is designed for use with **Angular 2**, it does not strictly mirror the functionality scope included in the [_D3 Standard Bundle_](https://github.com/d3/d3).\n\nThe [_d3-request_](https://github.com/d3/d3-request) module has been **omitted** as a design choice given the feature set of **Angular 2**.\n\nThe functionality enhancements provided by the now separate [_d3-selection-multi_](https://github.com/d3/d3-selection-multi) module have been included for added convenience.\n\n## Intended Use\n\nThis package was designed to quickly add **D3 version 4** support to an **Angular 2** application, such as those created with **angular-cli**.\n\nAs is clear from the D3 scope described above, there may be circumstances, where a smaller or larger D3 feature set may be better suited.\nIn such cases reviewing the TypeScript source code in the [package's Github repo](https://github.com/tomwanzek/d3-ng2-service) may serve as a starting point for a more tailored solution.\n\n## Installation\n\nTo include the package into your **Angular 2** project, simply use the standard npm package installation command:\n\n```\nnpm install d3-ng2-service --save\n```\n\nPlease note that, the package has a _peer dependency_ on **@angular/core**.\n\n## Usage\n\nOnce the module `d3-ng2-service` has been added to a project as described above, it provides the following importable exports:\n\n* `D3Service`: The Angular 2 D3 Service injectable,\n* `D3`: A TypeScript type alias for the `d3` variable which can be obtained from the `D3Service`, and\n* the various TypeScript interfaces and type aliases which are related to the D3 modules constituting `d3` as provided by this service (e.g. `Selection`, `Transition`, `Axis`). \n\nTo obtain the `d3` object from an injected D3 service `d3Service: D3Service`, it offers a method `d3Service.getD3()` with return type `D3`. \n\nThe below code snippets assume the use of TypeScript.\n\n### Step 1 - Registering the Service with an Angular 2 Module\n\nImport the **Angular 2 service** and register it as a **provider with an Angular 2 module**.\n\n```\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, ApplicationRef } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\n\nimport { D3Service } from 'd3-ng2-service'; // <-- import statement\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TestD3Component // <-- declaration of the D3 Test component used below\n  ],\n  imports: [\n    BrowserModule,\n    CommonModule,\n    FormsModule\n  ],\n  providers: [D3Service], // <-- provider registration\n  entryComponents: [AppComponent],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n\n}\n```\n\n### Step 2 - Using the Service with an Angular 2 Component\n\n_Important:_ The component is declared in the same module as the `D3Service` provider has been registered.\nImport the **D3 service** and then pass the service into the _component constructor_ together with `ElementRef`. Obtain `d3` from the **D3 service** and use it to perform the required tasks.\n\n```\nimport { Component, OnInit, ElementRef } from '@angular/core';\nimport { D3Service, D3, Selection } from 'd3-ng2-service'; // <-- import the D3 Service, the type alias for the d3 variable and the Selection interface\n\n@Component({\n  selector: 'app-test-d3',\n  templateUrl: 'test-d3.component.html',\n  styleUrls: ['test-d33.component.css']\n})\nexport class TestD3Component implements OnInit {\n\n  private d3: D3; // <-- Define the private member which will hold the d3 reference\n  private parentNativeElement: any;\n\n  constructor(element: ElementRef, d3Service: D3Service) { // <-- pass the D3 Service into the constructor\n    this.d3 = d3Service.getD3(); // <-- obtain the d3 object from the D3 Service\n    this.parentNativeElement = element.nativeElement;\n  }\n\n  ngOnInit() {\n    let d3 = this.d3; // <-- for convenience use a block scope variable\n    let d3ParentElement: Selection<any, any, any, any>; // <-- Use the Selection interface (very basic here for illustration only)\n\n// ...\n\n    if (this.parentNativeElement !== null) {\n\n      d3ParentElement = d3.select(this.parentNativeElement); // <-- use the D3 select method \n\n      // Do more D3 things \n\n    }\n  }\n\n}\n```\n\n## Demo Project\n\nFor a more complete worked example of how this module can be used in an angular-cli created D3 Demo App, please see: \n* Github repo: [tomwanzek/d3-ng2-demo](https://github.com/tomwanzek/d3-ng2-demo) and the related [_live_ Github page](https://tomwanzek.github.io/d3-ng2-demo/).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/tomwanzek/d3-ng2-service.git"
  },
  "scripts": {
    "build": "npm run es5 && npm run es2015 && npm run lint",
    "es2015": "tsc --project ./tsconfig.json",
    "es5": "tsc --project ./tsconfig.es5.json",
    "lint": "tslint -c tslint.json --project tsconfig.json",
    "prepublish": "npm run build",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "typings": "index.d.ts",
  "version": "1.10.1"
}
